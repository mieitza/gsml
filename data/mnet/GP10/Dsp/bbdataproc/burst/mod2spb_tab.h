/****************************************************************************
*   (c) Copyright Cisco 2000
*   All Rights Reserved
*****************************************************************************/
/****************************************************************************
**
** File: mod2spb_tab.h
**
** Description:   
**   This header file contains the modulator look up tables.
** 
*****************************************************************************/ 
#ifndef MOD2SPB_TAB_H
#define MOD2SPB_TAB_H

/*
* Modulator waveform look-up-table (I,Q,I,Q,...)
*/
#pragma DATA_ALIGN(modLUT2x, 4);
const t_DLComplexSamp modLUT2x[LUT_DEPTH][SAMPLES_PER_BIT] = {
{{0x8276, 0x18f9},{0xb8e3, 0x6a6e}},
{{0x8276, 0x18f9},{0xb8db, 0x6a68}},
{{0x822f, 0x178b},{0xaa07, 0x5ed5}},
{{0x822f, 0x178a},{0xaa00, 0x5ece}},
{{0x935a, 0xbc54},{0xae80, 0x9d4c}},
{{0x935a, 0xbc54},{0xae88, 0x9d46}},
{{0x9421, 0xbb19},{0xbde2, 0x9266}},
{{0x9421, 0xbb19},{0xbdea, 0x9261}},
{{0x6c05, 0xbb54},{0x4217, 0x9262}},
{{0x6c05, 0xbb54},{0x421f, 0x9267}},
{{0x6ccb, 0xbc8f},{0x5179, 0x9d47}},
{{0x6ccb, 0xbc8f},{0x5180, 0x9d4d}},
{{0x7dc4, 0x17cf},{0x55ff, 0x5ecf}},
{{0x7dc4, 0x17cf},{0x55f8, 0x5ed5}},
{{0x7d7d, 0x193d},{0x4724, 0x6a69}},
{{0x7d7d, 0x193d},{0x471c, 0x6a6e}},
{{0x7d7d, 0xe6c3},{0x471c, 0x9592}},
{{0x7d7d, 0xe6c3},{0x4724, 0x9597}},
{{0x7dc4, 0xe831},{0x55f8, 0xa12b}},
{{0x7dc4, 0xe831},{0x55ff, 0xa131}},
{{0x6ccb, 0x4371},{0x5180, 0x62b3}},
{{0x6ccb, 0x4371},{0x5179, 0x62b9}},
{{0x6c05, 0x44ac},{0x421f, 0x6d99}},
{{0x6c05, 0x44ac},{0x4217, 0x6d9e}},
{{0x9421, 0x44e7},{0xbdea, 0x6d9f}},
{{0x9421, 0x44e7},{0xbde2, 0x6d9a}},
{{0x935a, 0x43ac},{0xae88, 0x62ba}},
{{0x935a, 0x43ac},{0xae80, 0x62b4}},
{{0x822f, 0xe876},{0xaa00, 0xa132}},
{{0x822f, 0xe875},{0xaa07, 0xa12b}},
{{0x8276, 0xe707},{0xb8db, 0x9598}},
{{0x8276, 0xe707},{0xb8e3, 0x9592}}};
                                                             
                                                             
/*
* Modulator ramp-up look-up-table (I,Q,I,Q,...)
*/
#pragma DATA_ALIGN(modRampUp, 4);
const t_DLComplexSamp modRampUp[RAMP_SAMPLES*2+1] = {
{0x0000, 0x0000},
{0x0000, 0x0000},
{0x0000, 0x0000},
{0x0000, 0x0000},
{0x0000, 0x0000},
{0xfecb, 0xffc3},
{0xfbf3, 0xfd4b},
{0xfa02, 0xf708},
{0xfc58, 0xed9d},
{0x058d, 0xe41a},
{0x15f3, 0xdf26},
{0x2ad3, 0xe35e},
{0x3ebe, 0xf362},
{0x4b2e, 0x0e11},
{0x4bc8, 0x2db1},
{0x42de, 0x49c2},
{0x3a9e, 0x5c33},
{0x3df8, 0x637e},
{0x4e66, 0x5ef1},
{0x61c7, 0x50b0},
{0x6ccb, 0x4371}};


/*
* Modulator ramp-down look-up-table (I,Q,I,Q,...)
*/
#pragma DATA_ALIGN(modRampDown, 4);
const t_DLComplexSamp modRampDown[RAMP_SAMPLES*2] = {
{0x823c, 0xe831},
{0x9267, 0xbde1},
{0xaa08, 0xa12b},
{0xbbfd, 0x9505},
{0xbee7, 0x977d},
{0xb55e, 0xa59d},
{0xabc0, 0xba6f},
{0xab7f, 0xcb5e},
{0xb552, 0xd086},
{0xc755, 0xcca1},
{0xdef5, 0xc931},
{0xf686, 0xcd5d},
{0x07ca, 0xd944},
{0x0fcf, 0xe85b},
{0x0f96, 0xf596},
{0x0a94, 0xfde5},
{0x04c7, 0x00f3},
{0x0106, 0x00af},
{0x0000, 0x0000},
{0x0000, 0x0000}};


#endif
