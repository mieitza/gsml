/******************************************************************************
 ******************************************************************************
 **** This file was automatically generated by Wind River Systems
 **** Emissary SNMP MIB Compiler, version 7.0.
 **** This file was generated using the -skel.h switch.
 **** 
 **** This file contains declarations of stub functions to aid in building
 **** the agent MIB interface.  It declares all the MIB get, set, test and
 **** next method routines that you will need to supply.  You'll probably
 **** want to FORCE-INCLUDE this file when using the -mib.c output mode.
 **** 
 **** To generate the skeletal stub functions themselves, run mibcomp
 **** with the -skel switch.
 **** 
 **** YOU MAY MODIFY THIS FILE BUT BEWARE ACCIDENTALLY OVERWRITING IT
 **** BY REGENERATING IT WITH THE MIB COMPILER.
 **** 
 **** Last build date: Wed Apr 25 12:07:55 2001
 **** from files:
 ****  ../mibs/rfc1155.smi, ../mibs/rfc1213.mib, mnet.mib, snmpMib2.mib
 ******************************************************************************
 ******************************************************************************
 */

void systemGet(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void null_test_async(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void systemSet(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void systemTest(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void interfacesGet(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void ifEntryGet(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void ifEntryNext(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void ifEntrySet(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void ifEntryTest(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void ipNetToMediaEntryGet(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void ipNetToMediaEntrySet(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void ipNetToMediaEntryTest(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void ipNetToMediaEntryNext(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void ipGet(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void ipSet(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void ipTest(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void ipAddrEntryGet(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void ipAddrEntryNext(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void ipRouteEntryGet(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void ipRouteEntrySet(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void ipRouteEntryTest(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void ipRouteEntryNext(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void icmpGet(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void tcpGet(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void tcpConnEntryGet(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void tcpConnEntrySet(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void tcpConnEntryTest(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void tcpConnEntryNext(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void udpGet(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void udpEntryGet(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void udpEntryNext(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void snmpGet(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void snmpSet(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void snmpTest(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void _snmp_getMethod(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void _snmp_setMethod(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void _snmp_testMethod(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void _snmp_nextMethod(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
void null_next_async(OIDC_T, int, OIDC_T*, SNMP_PKT_T*, VB_T*);
