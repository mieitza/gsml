##########################################################
#
#  (c) Copyright Cisco 2000
#  All Rights Reserved
#
####################################################################
#                          
#  FILE NAME: Makefile    
#                      
#  DESCRIPTION: This makefile calls the vxWorks makefile to build
#               vxWorks library along with JetCell snmp agent.
#
#      COMPONENTS:                      
#                              
#                                  
#  NOTES:                              
#                                  
#  (c) Copyright Cisco 2000          All Rights Reserved
#                                 
#  REVISION HISTORY                            
#__________________________________________________________________
#----------+--------+----------------------------------------------
# Name     |  Date  |  Reason                
#----------+--------+----------------------------------------------
# Bhawani  |12/05/99| Initial Draft
#----------+--------+----------------------------------------------
####################################################################
#/


# TOP_OF_VOB must be defined before including l3defs.mk
TOP_OF_VOB = ..\..\..

# These Must be Properly Defined
THIS_APP_DIR   = snmp
THIS_DIRECTORY = src
MY_OUTPUT = $(OBJDIR)\snmp.out


# Version related
SNMPDIR = $(WIND_BASE)\target\src\snmpv1\agent
VERSION_FILE_NAME = ..\..\version.txt

# Library Related
ASNMIB  =  ..\Asn1\vipercell.mib
DSTMIB  =  $(SNMPDIR)\mnet.mib
MIBTAG  =  $(HOST_COMMON_DIR)\include\mibtags.h


# Name(s) of Common VOB directories to include
COMMON_BLD_DIR = $(THIS_APP_DIR)

REPLACE_LIST=

include $(TOP_OF_VOB)\l3defs.mk

all: library agent

agent: version makeCommonObjs $(MY_OUTPUT) checkin

# Adds the .o file(s) list needed from the Common VOB
makeCommonObjs:
ifneq ($(COMMON_BLD_DIR),)
	@for %f in ($(COMMON_BLD_DIR)) do \
	make -C $(COMMON_VOB_APP_DIR)\%f \
	all VOB=$(VOBNAME) APPDIR=Host\$(THIS_APP_DIR)\$(THIS_DIRECTORY) REPLACE=$(REPLACE_LIST)
endif

$(MY_OUTPUT): $(MODULE_OBJS)
ifneq ($(COMMON_BLD_DIR),)
	$(LD) -r -o $@.tmp $() $(MODULE_OBJS) $(wildcard ./bin/*.o)
else
	$(LD) -r -o $@.tmp $() $(MODULE_OBJS)
endif
	$(NM) $@.tmp | munch > _ctdt.c
	$(CC) -traditional $(CC_ARCH_SPEC) -c _ctdt.c
	$(LD) -r -o $@ _ctdt.o $@.tmp
	$(RM)$(subst /,$(DIRCHAR), _ctdt.c _ctdt.o $@.tmp)

cleanall:
	@for %f in ($(notdir $(MODULE_OBJS))) do \
		$(RM) ..\bin\%f

	$(RM) $(MY_OUTPUT)
	@ echo Copying file $(ASNMIB) to $(DSTMIB)
	@ $(CP) $(ASNMIB) $(DSTMIB)
	$(MAKE) -C $(SNMPDIR) CPU=PPC860 TOOL=gnu  VOBNAME=gp10 clean 
	-cleartool unco -rm $(VERSION_FILE_NAME)


ifneq ($(COMMON_BLD_DIR),)
	$(RM) bin\*.o
	$(RM) bin\*.out
endif


# Create libPPC860
library:
	@ echo Copying file $(ASNMIB) to $(DSTMIB)
	@ $(CP) $(ASNMIB) $(DSTMIB)
	@ echo Copying file $(MIBTAG) to $(SNMPDIR)
	@ $(CP) $(MIBTAG) $(SNMPDIR)
	@ echo Building vxWorks Library
	$(MAKE) -C $(SNMPDIR) CPU=PPC860 TOOL=gnu VOBNAME=gp10
	


version:
#   Uncheckout the file first
ifneq ($(BUILDID),)
ifneq ($(VERSION),)
	-cleartool co -res -nwarn -c "Building version $(VERSION) (build id $(BUILDID)) "   $(VERSION_FILE_NAME)
	@echo /******************************************************************** > $(VERSION_FILE_NAME)
	@echo  *                                                                    >> $(VERSION_FILE_NAME)                      
	@echo  *  FILE NAME: /ViperCell/version.txt                                 >> $(VERSION_FILE_NAME)
	@echo  *                                                                    >> $(VERSION_FILE_NAME)
	@echo  *  DESCRIPTION: This file contains version numbers supplied from the >> $(VERSION_FILE_NAME)
	@echo  *              make command line.                                    >> $(VERSION_FILE_NAME)
	@echo  *                                                                    >> $(VERSION_FILE_NAME)
	@echo  *  NOTES:                                                            >> $(VERSION_FILE_NAME)  
	@echo  *                                                                    >> $(VERSION_FILE_NAME)
	@echo  *  (C) Copyright 2000 Cisco Systems Inc., CA, USA					>> $(VERSION_FILE_NAME)
	@echo  *	 http://www.cisco.com/											>> $(VERSION_FILE_NAME)
	@echo  *                                                                    >> $(VERSION_FILE_NAME)
	@echo  *  WARNING:  This file is automatically generated by Makefile        >> $(VERSION_FILE_NAME)
	@echo  *           and any changes made to this file will be overwritten    >> $(VERSION_FILE_NAME)  
	@echo  *           by the next build.                                       >> $(VERSION_FILE_NAME)
	@echo  *                                                                    >> $(VERSION_FILE_NAME)
	@echo  * Created by:  $(USERNAME)                                           >> $(VERSION_FILE_NAME)
	@echo  ******************************************************************** >> $(VERSION_FILE_NAME)
	@echo  */                                                                   >> $(VERSION_FILE_NAME)    
	@echo [VERSION]                                                             >> $(VERSION_FILE_NAME)    
	@echo $(VERSION)                                                            >> $(VERSION_FILE_NAME)
	@echo [BUILDID]                                                             >> $(VERSION_FILE_NAME)    
	@echo $(BUILDID)                                                            >> $(VERSION_FILE_NAME)
	@echo [TIME]                                                                >> $(VERSION_FILE_NAME)    
	@time /t                                                                    >> $(VERSION_FILE_NAME)
	@echo [DATE]                                                                >> $(VERSION_FILE_NAME)    
	@date /t                                                                    >> $(VERSION_FILE_NAME)
endif
endif

checkin:
#	ignore if checkin failure
	-cleartool ci -nc -nwarn $(VERSION_FILE_NAME)

testbuild:
	-$(RM) .\bin\*.o*
	-$(RM) ..\bin\*.o*
	$(MAKE) agent EXTRA=-D_DEBUG

	

    